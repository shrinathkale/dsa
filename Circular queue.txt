#include <iostream>
#include <cstdlib>
using namespace std;

struct Node {
    int data;
    Node *next;
};

Node *front = NULL;
Node *rear = NULL;

// Function to add an element to the queue
void enqueue(int val) {
    struct Node *newNode = (struct Node *)malloc(sizeof(struct Node));
    if (!newNode) {
        cout << "Memory allocation failed!" << endl;
        return;
    }
    newNode->data = val;
    newNode->next = NULL;

    // If queue is empty
    if (front == NULL && rear == NULL) {
        front = newNode;
        rear = newNode;
        rear->next = front; // Circular connection
    } else {
        rear->next = newNode;
        rear = newNode;
        rear->next = front; // Maintain circular connection
    }

    cout << "Front: " << front->data << ", Rear: " << rear->data << endl;
}

// Function to remove an element from the queue
void dequeue() {
    if (front == NULL && rear == NULL) {
        cout << "Queue is empty!" << endl;
        return;
    }

    // If only one node is present
    if (front == rear) {
        cout << "Dequeued element: " << front->data << endl;
        free(front);
        front = rear = NULL;
    } else {
        struct Node *temp = front;
        cout << "Dequeued element: " << temp->data << endl;
        front = front->next;
        rear->next = front; // Update rear to point to the new front
        free(temp);
    }
}

// Function to display the elements of the queue
void display() {
    if (front == NULL && rear == NULL) {
        cout << "Queue is empty!" << endl;
        return;
    }

    struct Node *ptr = front;
    cout << "Queue: ";
    do {
        cout << ptr->data << " ";
        ptr = ptr->next;
    } while (ptr != front);
    cout << endl;

    cout << "Front: " << front->data << ", Rear: " << rear->data << endl;
}

// Main function
int main() {
    int ch, val;
    cout << "1) Enqueue\n";
    cout << "2) Dequeue\n";
    cout << "3) Display\n";
    cout << "4) Exit\n";

    do {
        cout << "Enter choice: ";
        cin >> ch;

        switch (ch) {
            case 1:
                cout << "Element to enqueue: ";
                cin >> val;
                enqueue(val);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                cout << "Exit" << endl;
                break;
            default:
                cout << "Incorrect choice!" << endl;
        }
    } while (ch != 4);

    return 0;
}